- update import data, test it out
- deploy, migrate
  - put maintenance message on old site, pause emails
  - import data (unsubscribe inactive users)
  - do discover recs approvals
  - uncomment stripe api key
  - update old domain target
  - turn on digests
    - uncomment email queue thing
      - still disable in dev
    - also uncomment queue-add-candidate
- finish ads
    admin page approvals
    charge
- migrate the sample
- spam filtering
- more settings
  - export data
  - delete your account

backlog
- think about best way to define different kinds of routes again
- why aren't obryant.dev rss posts in order on subs page
- why doesn't ad preview show up on initial page load
- should individual pipe states be standalone defmethods or similar?
- cache all assets in s3
- keep changes to repl.clj out of source or something
- look at webmanifest thing
- gmail period thing
- refactor model code to not treat user as a global
- bounce/complaint handling (mailersend already blocks sending; just need to update our end so we
  don't do DB transactions for them unnecessarily)
- list cleaning
- can we use lazy-map on malli-opts while still doing late binding?
- compare pipeline stuff to core.async flow
- make auth module store signed humanity token in session after requesting a sign-in code
- make sure we're setting cache-related headers correctly for resources
- generative testing for get routes + resolvers
- e2e tests
- share target -- make a pwa/app
- organize resolvers -- group by input entity
- check all the pages on mobile
- make sure links in old emails still work
- pathom errors: use ex-cause instead of monkey patching?
- better approach to loading indicators/lazy loads
- deal with large values in lib.pipeline exceptions, lib.test examples
- "column families not opened" error after you remove an index
- index-get, index-get-many: better error message for nonexistent index id
- pathom error messages: make "can't find path for current entity" more specific. e.g. is there _any_ resolver that
  outputs the requested key.
- see how fulcro's datomic resolvers handle when you query for a ref attr without doing a join -- do they return a full
  map if another part of the query asks for the whole entity
- throw an error if you make a resolver that queries a ref attr without a sub query
- optimize page load speed--e.g. use macros to precompile hiccup?
- check :item/image-url gets set correctly for feed items
- maybe include wrap-signed-in as part of defget/defpost
- autogenerate tests for all defgets, defposts, defresolvers
- when viewing an item for the first time, unread status is stale in the feed below. maybe just need to make it lazy
- infer :item/url for emails

---

short-form rss
  when ingesting rss items, assign a group id if item length is under a threshold
    use the previous item's group ID if that group ID started less than a week previous and if total group length is
    under a threshold
    otherwise start a new group ID
  when recommending RSS subs, only recommend first item in group
  when viewing RSS items, show all items in the group
